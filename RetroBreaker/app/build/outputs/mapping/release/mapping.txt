br.usp.ime.retrobreaker.GameActivity -> br.usp.ime.retrobreaker.GameActivity:
    br.usp.ime.retrobreaker.game.TouchSurfaceView mTouchSurfaceView -> a
    android.os.Handler mHandler -> b
    android.widget.TextView mScoreTextView -> c
    android.widget.TextView mScoreMultiplierTextView -> d
    android.widget.TextView mLivesTextView -> e
    android.widget.TextView mHighScoreTextView -> f
    android.widget.TextView mReadyTextView -> g
    android.content.SharedPreferences mSharedPrefs -> h
    android.content.SharedPreferences$Editor mSharedPrefsEditor -> i
    long mHighScore -> j
    boolean mNewHighScore -> k
    boolean mFinish -> l
    android.media.SoundPool mSoundPool -> m
    java.util.HashMap mSoundIds -> n
    android.view.View mDecorView -> o
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean access$000(br.usp.ime.retrobreaker.GameActivity) -> a
    void access$100(br.usp.ime.retrobreaker.GameActivity) -> b
    void access$200(br.usp.ime.retrobreaker.GameActivity) -> c
    android.widget.TextView access$300(br.usp.ime.retrobreaker.GameActivity) -> d
    android.widget.TextView access$400(br.usp.ime.retrobreaker.GameActivity) -> e
    android.widget.TextView access$500(br.usp.ime.retrobreaker.GameActivity) -> f
    long access$600(br.usp.ime.retrobreaker.GameActivity) -> g
    long access$602(br.usp.ime.retrobreaker.GameActivity,long) -> a
    boolean access$702$7f383bcc(br.usp.ime.retrobreaker.GameActivity) -> h
    android.widget.TextView access$800(br.usp.ime.retrobreaker.GameActivity) -> i
    android.widget.TextView access$900(br.usp.ime.retrobreaker.GameActivity) -> j
    boolean access$700(br.usp.ime.retrobreaker.GameActivity) -> k
    void access$1000(br.usp.ime.retrobreaker.GameActivity,long,boolean) -> a
    android.content.SharedPreferences$Editor access$1100(br.usp.ime.retrobreaker.GameActivity) -> l
    java.util.HashMap access$1200(br.usp.ime.retrobreaker.GameActivity) -> m
    android.media.SoundPool access$1300(br.usp.ime.retrobreaker.GameActivity) -> n
    boolean access$002$7f383bcc(br.usp.ime.retrobreaker.GameActivity) -> o
br.usp.ime.retrobreaker.GameActivity$1 -> br.usp.ime.retrobreaker.a:
    br.usp.ime.retrobreaker.GameActivity this$0 -> a
    void <init>(br.usp.ime.retrobreaker.GameActivity) -> <init>
    void run() -> run
br.usp.ime.retrobreaker.GameActivity$2 -> br.usp.ime.retrobreaker.b:
    br.usp.ime.retrobreaker.GameActivity this$0 -> a
    void <init>(br.usp.ime.retrobreaker.GameActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
br.usp.ime.retrobreaker.GameActivity$3 -> br.usp.ime.retrobreaker.c:
    br.usp.ime.retrobreaker.GameActivity this$0 -> a
    void <init>(br.usp.ime.retrobreaker.GameActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
br.usp.ime.retrobreaker.GameActivity$4 -> br.usp.ime.retrobreaker.d:
    br.usp.ime.retrobreaker.GameActivity this$0 -> a
    void <init>(br.usp.ime.retrobreaker.GameActivity) -> <init>
    void run() -> run
br.usp.ime.retrobreaker.MainActivity -> br.usp.ime.retrobreaker.MainActivity:
    android.widget.TextView mHighScoreTextView -> a
    android.widget.Button mNewGameButton -> b
    android.widget.Button mResetScoreButton -> c
    android.widget.Spinner mLevelSpinner -> d
    android.widget.CheckBox mSoundEffectsCheckBox -> e
    android.content.SharedPreferences mSharedPrefs -> f
    int mRickRoll -> g
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onCheckBoxClicked(android.view.View) -> onCheckBoxClicked
    void updateScoreTextView() -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    android.content.SharedPreferences access$000(br.usp.ime.retrobreaker.MainActivity) -> a
    void access$100(br.usp.ime.retrobreaker.MainActivity) -> b
    int access$208(br.usp.ime.retrobreaker.MainActivity) -> c
    int access$200(br.usp.ime.retrobreaker.MainActivity) -> d
    void access$300(br.usp.ime.retrobreaker.MainActivity) -> e
    int access$202$5c38bccf(br.usp.ime.retrobreaker.MainActivity) -> f
br.usp.ime.retrobreaker.MainActivity$1 -> br.usp.ime.retrobreaker.e:
    br.usp.ime.retrobreaker.MainActivity this$0 -> a
    void <init>(br.usp.ime.retrobreaker.MainActivity) -> <init>
    void onClick(android.view.View) -> onClick
br.usp.ime.retrobreaker.MainActivity$2 -> br.usp.ime.retrobreaker.f:
    br.usp.ime.retrobreaker.MainActivity this$0 -> a
    void <init>(br.usp.ime.retrobreaker.MainActivity) -> <init>
    void onClick(android.view.View) -> onClick
br.usp.ime.retrobreaker.MainActivity$3 -> br.usp.ime.retrobreaker.g:
    br.usp.ime.retrobreaker.MainActivity this$0 -> a
    void <init>(br.usp.ime.retrobreaker.MainActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
br.usp.ime.retrobreaker.effects.Explosion -> br.usp.ime.retrobreaker.a.a:
    java.lang.String TAG -> c
    br.usp.ime.retrobreaker.forms.Particle[] mParticles -> a
    int mState -> b
    void <init>(float,float) -> <init>
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.Ball -> br.usp.ime.retrobreaker.b.a:
    float[] VERTICES -> b
    float mPrevPosX -> c
    float mPrevPosY -> d
    float mSlope -> a
    boolean mUndefinedSlope -> e
    float mTrajectoryIncrement -> f
    void <init>(float[],float) -> <init>
    float getY2InEquation(float,float,float) -> a
    float getX2InEquation(float,float,float) -> b
    void turnToPerpendicularDirection$5138a914(int) -> a
    void turnByAngle(float) -> a
    java.lang.String toString() -> toString
    void move() -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.Ball$1 -> br.usp.ime.retrobreaker.b.b:
    int[] $SwitchMap$br$usp$ime$retrobreaker$game$Constants$Hit -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.Brick -> br.usp.ime.retrobreaker.b.c:
    float[] VERTICES -> c
    int mLives -> a
    int mType$5ab030c5 -> b
    void <init>(float[],float,float,int) -> <init>
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.Brick$1 -> br.usp.ime.retrobreaker.b.d:
    int[] $SwitchMap$br$usp$ime$retrobreaker$forms$Brick$Type -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.Brick$Type -> br.usp.ime.retrobreaker.b.e:
    int NORMAL$5ab030c5 -> a
    int EXPLOSIVE$5ab030c5 -> b
    int HARD$5ab030c5 -> c
    int MOBILE$5ab030c5 -> d
    int[] $VALUES$23922dd6 -> e
    int[] values$7b728dcb() -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.MobileBrick -> br.usp.ime.retrobreaker.b.f:
    int mFramesToWait -> n
    int mToWait -> c
    float mSpeedX -> d
    boolean mCollided -> e
    int mIndexI -> f
    int mIndexJ -> g
    void <init>(float[],float,float,int,int,int,float) -> <init>
    void move() -> a
    void invertDirection() -> b
br.usp.ime.retrobreaker.forms.Paddle -> br.usp.ime.retrobreaker.b.g:
    float[] VERTICES -> a
    void <init>(float[]) -> <init>
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.Particle -> br.usp.ime.retrobreaker.b.h:
    float[] VERTICES -> b
    float MAX_SPEED -> a
    int mState -> c
    double mXv -> d
    double mYv -> e
    int mAge -> f
    int mLifetime -> g
    void <init>(float[],float,float) -> <init>
    boolean isAlive() -> a
    double rndDbl$25399e3(double) -> a
    void update() -> b
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.forms.Quad -> br.usp.ime.retrobreaker.b.i:
    java.lang.String TAG -> h
    float mPosX -> i
    float mPosY -> j
    float mScale -> k
    float[] mVertices -> l
    float[] mColors -> m
    java.nio.FloatBuffer mVertexBuffer -> a
    java.nio.FloatBuffer mColorBuffer -> b
    void <init>(float[],float,float[],float,float) -> <init>
    void setColor(float[]) -> a
    float getPosX() -> c
    float getPosY() -> d
    java.lang.String toString() -> toString
    float getLeftX() -> e
    float getBottomY() -> f
    float getTopY() -> g
    float getRightX() -> h
    float getWidth() -> i
    float getHeight() -> j
    float getSizeX() -> k
    float getSizeY() -> l
    void setPosX(float) -> b
    void draw(javax.microedition.khronos.opengles.GL10) -> a
br.usp.ime.retrobreaker.game.Constants -> br.usp.ime.retrobreaker.game.a:
br.usp.ime.retrobreaker.game.Constants$BallDirection -> br.usp.ime.retrobreaker.game.b:
    int RIGHT_UPWARD$475ad36a -> a
    int LEFT_UPWARD$475ad36a -> b
    int RIGHT_DOWNWARD$475ad36a -> c
    int LEFT_DOWNWARD$475ad36a -> d
    int UPWARD$475ad36a -> e
    int DOWNWARD$475ad36a -> f
    int UNKNOWN_DIRECTION$475ad36a -> g
    int[] $VALUES$7aade7b -> h
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$Collision -> br.usp.ime.retrobreaker.game.c:
    br.usp.ime.retrobreaker.game.Constants$Collision NOT_AVAILABLE -> a
    br.usp.ime.retrobreaker.game.Constants$Collision WALL_RIGHT_LEFT_SIDE -> b
    br.usp.ime.retrobreaker.game.Constants$Collision WALL_TOP_BOTTOM_SIDE -> c
    br.usp.ime.retrobreaker.game.Constants$Collision PADDLE_BALL -> d
    br.usp.ime.retrobreaker.game.Constants$Collision BRICK_BALL -> e
    br.usp.ime.retrobreaker.game.Constants$Collision EX_BRICK_BALL -> f
    br.usp.ime.retrobreaker.game.Constants$Collision LIFE_LOST -> g
    br.usp.ime.retrobreaker.game.Constants$Collision[] $VALUES -> h
    br.usp.ime.retrobreaker.game.Constants$Collision[] values() -> values
    br.usp.ime.retrobreaker.game.Constants$Collision valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$Color -> br.usp.ime.retrobreaker.game.d:
    float[] GRAY_RGB -> a
    float[] WHITE_RGB -> b
    float[] BLACK_RGB -> c
    float[] RED_RGB -> d
    float[] BLUE_RGB -> e
    float[] GREEN_RGB -> f
    float[] WHITE -> g
    float[] GRAY -> h
    float[] RED -> i
    float[] GREEN -> j
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$Config -> br.usp.ime.retrobreaker.game.e:
    br.usp.ime.retrobreaker.game.Constants$Collision[] CONSECUTIVE_COLLISION_DETECTION -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$Difficult -> br.usp.ime.retrobreaker.game.f:
    boolean[] INVINCIBILITY -> a
    int[] LIFE_STOCK -> b
    int[] HIT_SCORE -> c
    int[] LIFE_SCORE_BONUS -> d
    int[] MAX_SCORE_MULTIPLIER -> e
    float[] BALL_SPEED -> f
    float[] GREY_BRICK_PROB -> g
    float[] EX_BRICK_PROB -> h
    float[] MOBILE_BRICK_PROB -> i
    float[] MOBILE_BRICK_SPEED -> j
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$Hit -> br.usp.ime.retrobreaker.game.g:
    int RIGHT_LEFT$683ec937 -> a
    int TOP_BOTTOM$683ec937 -> b
    int[] $VALUES$5f63ed12 -> c
    int[] values$6e9f95b1() -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$Lives -> br.usp.ime.retrobreaker.game.h:
    int RESTART_LEVEL$5a864e83 -> a
    int LOST_LIFE$5a864e83 -> b
    int[] $VALUES$1cf1e79e -> c
    int[] values$4be5e47d() -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$Score -> br.usp.ime.retrobreaker.game.i:
    int RESTART_LEVEL$6620ae58 -> a
    int BRICK_HIT$6620ae58 -> b
    int EX_BRICK_HIT$6620ae58 -> c
    int[] $VALUES$288c4773 -> d
    int[] values$57804452() -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Constants$ScoreMultiplier -> br.usp.ime.retrobreaker.game.j:
    int RESTART_LEVEL$12795057 -> a
    int LOST_LIFE$12795057 -> b
    int PADDLE_HIT$12795057 -> c
    int BRICK_HIT$12795057 -> d
    int[] $VALUES$6e1883b2 -> e
    int[] values$6386ca2f() -> a
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Game -> br.usp.ime.retrobreaker.game.k:
    java.lang.String TAG -> b
    br.usp.ime.retrobreaker.forms.Paddle mPaddle -> a
    br.usp.ime.retrobreaker.forms.Ball mBall -> c
    br.usp.ime.retrobreaker.forms.Brick[][] mBricks -> d
    android.media.SoundPool mSoundPool -> e
    java.util.HashMap mSoundIds -> f
    android.content.Context mContext -> g
    java.util.List mExplosions -> h
    java.util.List mMobileBricks -> i
    java.util.HashMap mConsecutiveCollision -> j
    void <init>(android.content.Context) -> <init>
    void resetElements() -> c
    void createLevel$3b4f66ab() -> d
    void drawElements(javax.microedition.khronos.opengles.GL10) -> a
    void updateBrickExplosion() -> e
    float calcReflectedAngle(float,float) -> a
    br.usp.ime.retrobreaker.game.Constants$Collision detectConsecutiveCollision(br.usp.ime.retrobreaker.game.Constants$Collision) -> a
    void updateState() -> a
    void moveMobileBricks() -> f
    void brickExploded(int,int) -> a
    void decrementBrickLife(int,int) -> b
    void deleteMobileBrick(int,int) -> c
    java.lang.String access$000() -> b
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Game$1 -> br.usp.ime.retrobreaker.game.l:
    int[] $SwitchMap$br$usp$ime$retrobreaker$game$Constants$Collision -> a
    int[] $SwitchMap$br$usp$ime$retrobreaker$game$Constants$Score -> b
    int[] $SwitchMap$br$usp$ime$retrobreaker$game$Constants$ScoreMultiplier -> c
    int[] $SwitchMap$br$usp$ime$retrobreaker$game$Constants$Lives -> d
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.Game$State -> br.usp.ime.retrobreaker.game.m:
    long sScore -> a
    int sScoreMultiplier -> b
    int sLives -> c
    boolean sGameOver -> d
    float sScreenHigherY -> e
    float sScreenLowerY -> f
    float sScreenHigherX -> g
    float sScreenLowerX -> h
    boolean sGamePaused -> i
    int sDifficult -> j
    float sVolume -> k
    void setScore$4e2e8dcd(int) -> a
    void setScoreMultiplier$a3165f4(int) -> b
    void setLives$405330c8(int) -> c
    void setGameOver(boolean) -> a
    void setVolume(float) -> b
    void enableSoundEffects(boolean) -> b
    void setScreenMeasures$2548a35(float) -> a
br.usp.ime.retrobreaker.game.TouchSurfaceView -> br.usp.ime.retrobreaker.game.TouchSurfaceView:
    java.lang.String TAG -> a
    long mPrevFrameTime -> b
    long mCurrentTime -> c
    long mElapsedTime -> d
    long mLag -> e
    br.usp.ime.retrobreaker.game.TouchSurfaceView$Renderer mRenderer -> f
    int mScreenWidth -> g
    int mScreenHeight -> h
    float[] mUnprojectViewMatrix -> i
    float[] mUnprojectProjMatrix -> j
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    long access$002(br.usp.ime.retrobreaker.game.TouchSurfaceView,long) -> a
    long access$102(br.usp.ime.retrobreaker.game.TouchSurfaceView,long) -> b
    long access$202(br.usp.ime.retrobreaker.game.TouchSurfaceView,long) -> c
    long access$100(br.usp.ime.retrobreaker.game.TouchSurfaceView) -> a
    long access$000(br.usp.ime.retrobreaker.game.TouchSurfaceView) -> b
    long access$300(br.usp.ime.retrobreaker.game.TouchSurfaceView) -> c
    long access$302(br.usp.ime.retrobreaker.game.TouchSurfaceView,long) -> d
    long access$200(br.usp.ime.retrobreaker.game.TouchSurfaceView) -> d
    java.lang.String access$400() -> a
    int access$502(br.usp.ime.retrobreaker.game.TouchSurfaceView,int) -> a
    int access$602(br.usp.ime.retrobreaker.game.TouchSurfaceView,int) -> b
    float[] access$700(br.usp.ime.retrobreaker.game.TouchSurfaceView) -> e
    float[] access$800(br.usp.ime.retrobreaker.game.TouchSurfaceView) -> f
    void <clinit>() -> <clinit>
br.usp.ime.retrobreaker.game.TouchSurfaceView$Renderer -> br.usp.ime.retrobreaker.game.n:
    br.usp.ime.retrobreaker.game.Game mGame -> b
    br.usp.ime.retrobreaker.game.TouchSurfaceView this$0 -> a
    void <init>(br.usp.ime.retrobreaker.game.TouchSurfaceView,android.content.Context) -> <init>
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    br.usp.ime.retrobreaker.game.Game access$900(br.usp.ime.retrobreaker.game.TouchSurfaceView$Renderer) -> a
br.usp.ime.retrobreaker.game.TouchSurfaceView$Renderer$1 -> br.usp.ime.retrobreaker.game.o:
    float val$x -> a
    br.usp.ime.retrobreaker.game.TouchSurfaceView$Renderer this$1 -> b
    void <init>(br.usp.ime.retrobreaker.game.TouchSurfaceView$Renderer,float) -> <init>
    void run() -> run
